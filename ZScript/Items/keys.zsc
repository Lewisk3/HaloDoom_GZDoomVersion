const HKEY_REDMSG     = "$GOTREDCARD";
const HKEY_BLUEMSG    = "$GOTBLUECARD";
const HKEY_YELLOWMSG  = "$GOTYELLOWCARD";
const HCKEY_REDMSG    = "Picked up the red index.";
const HCKEY_BLUEMSG   = "Picked up the blue index.";
const HCKEY_YELLOWMSG = "Picked up the yellow index.";

// Defaults
class HaloKey : DoomKey
{
	double rotatespd;
	Property RotationSpeed : rotatespd;
	
	Default
	{
		Scale 0.5;
		+FLATSPRITE;
		+INTERPOLATEANGLES;
		HaloKey.RotationSpeed 4;
	}
	
	override void Tick()
	{
		super.Tick();
		if(!rotatespd) 
			bFLATSPRITE = false;
		else
		{
			pitch = -90;
			angle += rotatespd;
		}
	}
}
class HaloCovKey : HaloKey
{
	Default
	{
		Radius 8;
		Height 24;
		ProjectilePassHeight 0;
		Renderstyle "Normal";
		Scale 2.5;
	}
}

// Card Keys
class HaloRedKey : HaloKey replaces RedCard
{
	Default
	{
		Inventory.Pickupmessage HKEY_REDMSG;
		Inventory.Icon "STKEYS2";
		species "RedCard";
	}
	
	States
	{
		Spawn:
			HRKY A 10 Bright;
		loop;
	}
}
class HaloBlueKey : HaloKey replaces BlueCard
{
	Default
	{
		Inventory.Pickupmessage HKEY_BLUEMSG;
		Inventory.Icon "STKEYS0";
		species "BlueCard";
	}
	States
	{
		Spawn:
			HBKY A 10 Bright;
		loop;
	}
} 
class HaloYellowKey : HaloKey replaces YellowCard
{
	Default
	{
		Inventory.Pickupmessage HKEY_YELLOWMSG;
		Inventory.Icon "STKEYS1";
		species "YellowCard";
	}
	
	States
	{
		Spawn:
			HYKY A 10 Bright;
		loop;
	}
}

// Covenant(Skull) Keys
class HaloCovRedKey : HaloCovKey replaces RedSkull
{
	Default
	{
		inventory.pickupmessage HCKEY_REDMSG;
		inventory.icon "HCRKA0";
		species "RedSkull";
	}
	States
	{
		Spawn:
			HCRK A 4 Bright;
		Loop;
	}
}
class HaloCovBlueKey : HaloCovKey replaces BlueSkull
{
	Default
	{
		inventory.pickupmessage HCKEY_BLUEMSG;
		inventory.icon "HCBKA0";
		species "BlueSkull";
	}
	States
	{
		Spawn:
			HCBK A 4 Bright;
		Loop;
	}
}
class HaloCovYellowKey : HaloCovKey replaces YellowSkull
{
	Default
	{
		inventory.pickupmessage HCKEY_YELLOWMSG;
		inventory.icon "HCYKA0";
		species "YellowSkull";
	}
	States
	{
		Spawn:
			HCYK A 4 Bright;
		Loop;
	}
}