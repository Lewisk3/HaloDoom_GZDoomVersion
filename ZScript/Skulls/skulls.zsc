class SkullFX_Confetti : CheapActor
{
	double fallRate;
	Default
	{
		Scale 0.1;
		RenderStyle "Shaded";
		+ROLLSPRITE;
		+BRIGHT;
	}
	
	override void BeginPlay()
	{
		super.BeginPlay();
		let cplr = players[consoleplayer].mo;
		let col = HLStatusColor.HSLtoRGB(frandom[Confetti](0,1.0), 1.0, 0.5);
		SetShade(col);
		fallRate = frandom[Confetti](0.2, 0.3);
		Scale.X *= frandom[Confetti](0.9,1.1);
		Scale.Y *= frandom[Confetti](0.5,2.0);
		roll = frandom[Confetti](0,360);
		angle = cplr.angle;
	}
	
	override void Tick()
	{
		super.Tick();
		if(isFrozen()) return;
			
		if(pos.z <= floorz)
		{
			vel *= 0;
			bFLATSPRITE = true;
			bBRIGHT = false;
			SetOrigin((pos.xy,floorz), true);
			alpha -= 0.007;
			
			return;
		}
		else if(vel.z < 0)
		{
			vector2 windir = (cos(angle+90), sin(angle+90));
			vel.xy += windir * (sin(GetAge() * 10) * 0.2);
			roll += frandom[Confetti](-0.3,0.3);
		}
		vel *= 0.9; 
		vel.z -= GetGravity() * fallRate;
		
		// Handle velocity
		SetOrigin(level.vec3offset(pos, vel), true);
	}
	
	States
	{
		Spawn:
			CNFT A 1;
		loop;
	}
}

class Skull_Confetti : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Grunt_Birthday_Party.png";
		HaloSkull.DisplayName "Headshot Birthday Party";
		HaloSkull.Description "Headshots lead to glorious celebrations!";
	}

	override void WorldThingDamaged(WorldEvent e)
	{
		let cplr = players[consoleplayer].mo;
		Actor victim = e.Thing;
		Actor damager = e.Inflictor;
		if(!damager) damager = e.DamageSource;
		
		Name dmgType = e.DamageType;
		if(victim.health <= 0 && dmgType == "Headshot")
		{
			// Confetti!
			vector3 spawnPos = (victim.pos.xy, victim.pos.z+(victim.height+10));
			for(int i = 0; i < frandom[ConfettiBomb](20,40); i++)
			{
				let cf = Spawn("SkullFX_Confetti", spawnPos);
				if(cf)
				{
					double cfAngle = frandom[ConfettiBomb](0,360);
					double cfPitch = frandom[ConfettiBomb](-20,-80);
					if(!i) cf.A_StartSound("Halo/Skulls/ConfettiPop", CHAN_AUTO, CHANF_OVERLAP|CHANF_NOPAUSE);
					cf.vel = (
						cos(cfAngle),
						sin(cfAngle),
						-sin(cfPitch) * 1.5
					) * frandom[ConfettiBomb](6,12);
				}
			}
		}
	}
}

class Skull_ZombieFuneral : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Boom.png";
		HaloSkull.DisplayName "Zombie Funeral";
		HaloSkull.Description "Zombie type enemies explode when they die.";
	}

	override void WorldThingDied(WorldEvent e)
	{
		Actor victim = e.Thing;
		string victimName = victim.getClassName();
		string victimTag = StringTable.Localize(victim.GetTag("NIL"));
		victimTag = victimTag.MakeLower();
		victimName = victimName.MakeLower();
		
		bool isZombie = (
			(victim is "Zombieman") || (victim is "Shotgunguy") || (victim is "Chaingunguy") || 
			(victimName.IndexOf("zombie") != -1) || (victimTag.IndexOf("zombie") != -1)
		);
		if(isZombie) 
		{
			vector3 explosionPos = (e.Thing.pos.xy, e.Thing.pos.z + (e.Thing.height * 0.5));
			let exp = Actor.Spawn("FragGrenadeExplosion", explosionPos);
			if(exp) victim.A_StartSound("Halo/Grenade/Frag/Explode", flags:CHANF_OVERLAP);
		}
	}
}

class Skull_Thunderstorm : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Thunderstorm.png";
		HaloSkull.DisplayName "Thunderstorm";
		HaloSkull.Description "Upgrades the rank of most enemies. \c[Red](TODO)";
	}
}
class Skull_Streaking : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Streaking.png";
		HaloSkull.DisplayName "Streaking";
		HaloSkull.Description "Player shields constantly decay at a slow pace but recharge some with every enemy kill. \c[Red](TODO)";
	}
}
class Skull_Recession : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Recession.png";
		HaloSkull.DisplayName "Recession";
		HaloSkull.Description "Every shot is worth twice the ammo. \c[Red](TODO)";
	}
}
class Skull_Pinata : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Pinata.png";
		HaloSkull.DisplayName "Pinata";
		HaloSkull.Description "Punching enemies makes them drop grenades. Beat them \'til candy comes out! \c[Red](TODO)";
	}
}
class Skull_Mythic : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Mythic.png";
		HaloSkull.DisplayName "Mythic";
		HaloSkull.Description "Enemies have increased health. \c[Red](TODO)";
	}
}
class Skull_Ghost : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Ghost.png";
		HaloSkull.DisplayName "Ghost";
		HaloSkull.Description "AI no longer flinch from attacks. \c[Red](TODO)";
	}
}
class Skull_Foreign : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Foreign.png";
		HaloSkull.DisplayName "Foreign";
		HaloSkull.Description "Players cannot pick up or use Covenant weapons. \c[Red](TODO)";
	}
}
class Skull_Fog : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Fog.png";
		HaloSkull.DisplayName "Fog";
		HaloSkull.Description "The motion tracker is disabled. You'll miss those eyes in the back of your head. \c[Red](TODO)";
	}
}
class Skull_Famine : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Famine.png";
		HaloSkull.DisplayName "Famine";
		HaloSkull.Description "Weapons dropped by AI have half the ammo they normally would. \c[Red](TODO)";
	}
}
class Skull_Blind : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Blind.png";
		HaloSkull.DisplayName "Blind";
		HaloSkull.Description "HUD and weapon do not display onscreen. \c[Red](TODO)";
	}
}
class Skull_Bandana : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Bandana.png";
		HaloSkull.DisplayName "Bandana";
		HaloSkull.Description "Infinite Ammo. \c[Red](TODO)";
	}
}
class Skull_Assassins : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Assassin.png";
		HaloSkull.DisplayName "Assassins";
		HaloSkull.Description "All enemies in the game are permanently cloaked. \c[Red](TODO)";
	}
}
class Skull_Anger : HaloSkull
{
	Default
	{
		HaloSkull.Icon "Graphics/Skulls/Skull_Anger.png";
		HaloSkull.DisplayName "Anger";
		HaloSkull.Description "Enemies fire their weapons faster and more frequently. \c[Red](TODO)";
	}
}