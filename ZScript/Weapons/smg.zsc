class Halo_SMG_Clip : Ammo 
{
	Default 
	{
		Inventory.MaxAmount 45;
	}
}
class Halo_SMG_Reserves : Ammo
{
	mixin WorldAmmoBehavior;
	Default 
	{
		Radius 8;
		Height 6;
		Scale 0.65;

		Inventory.Amount 32;
		Inventory.MaxAmount 180;
		Inventory.Icon "HLAMO0";
		Inventory.PickupSound "Halo/Pickup/Ammo";
		Inventory.PickupMessage "+32 Submachine Gun Ammo.";
		
		Ammo.BackpackMaxAmount 240;
	}
	
	States
	{
		Spawn:
			HLAM O -1 Bright;
		stop;
	}
}

class HaloSMG_Bullet : HaloBullet 
{
	Default
	{
		HaloProjectile.SetRanges SMG_RANGE1, SMG_RANGE2;
		HaloProjectile.MinRangeDamage SMG_MINDMG; 
		HaloProjectile.BaseDamage SMG_DMG;
		HaloProjectile.Speed_MPS SMG_BMPS;
		HaloProjectile.HeadshotDMGFactor SMG_HEDMOD;
		Scale 0.5;
	}
}

class Halo_SMG : HaloGun 
{	
	Default
	{
		Weapon.SlotNumber 3;
		Obituary "%o was turned into swiss cheese courtesy of %k's SMG.";
		Inventory.PickupMessage	"Picked up an SMG.";
		Tag "SMG";
		Weapon.BobSpeed 1.86;
		Weapon.BobRangeX 0.30;
		Weapon.AmmoType1 "Halo_SMG_Reserves";
		Weapon.AmmoType2 "Halo_SMG_Clip";
		Weapon.AmmoGive 45;
				
		// Recoil
		HaloGun.Bloom 0.12;
		HaloGun.BloomSpeed 0.45;
		HaloGun.BaseRecoil SMG_RECOIL;
		HaloGun.Inaccuracy SMG_ACCMOD;
		HaloGun.Crosshair "SMGRet", 1.0;
		HaloGun.UIGraphic "WI_SMG", 0.45;
		HaloGun.PowerTier P_NORM;
		
		RecoilWeapon.YOffsetRange -10, 40;
	}

	override void MarkPrecacheSounds()
	{
		// Prevent stutters by precaching weapon sounds.
		MarkSound("Halo/Weapons/SMG/Fire");
		MarkSound("Halo/Weapons/SMG/Fire/Bass");
		MarkSound("Halo/Weapons/SMG/Mech");
		MarkSound("Halo/Weapons/SMG/Reload");
		MarkSound("Halo/Weapons/SMG/Reload/Empty");
		MarkSound("Halo/Weapons/SMG/Draw");
	}
	
	action void A_FireSMG()
	{
		A_Light(2);
		A_WeapSound("Halo/Weapons/SMG/Fire", CHANF_OVERLAP, true);
		A_WeapSound("Halo/Weapons/SMG/Fire/Bass", CHANF_OVERLAP, true);
		A_ShootProjectile("HaloSMG_Bullet", 12);		
		A_SetSFXPos(20,-18,-12);
		A_SpawnSFX("BulletCasing", -90,-20);
		A_SetSFXPos(25,-10,-8);
		A_SpawnSFX("MuzzleSmoke", 0,0);
		A_TakeAmmo();
		A_UpdateSpread();
	}
	
	action void A_ReloadSound()
	{
		Sound reload_snd = "Halo/Weapons/SMG/Reload";
		if(!CountLoadedAmmo()) reload_snd = "Halo/Weapons/SMG/Reload/Empty";
		A_StartSound(reload_snd, CHAN_RELOADING, CHANF_OVERLAP);
	}
	
	States
	{	
		Ready:
			TNT1 A 0 A_JumpIf(!A_DoFullSelectAnimation(), "Ready.Chambered");
			TNT1 A 4 A_WeapSound("Halo/Weapons/SMG/Draw");
			WFD1 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_DoSelectAnim(-5, true);
			WFD2 ABCD 2;
		goto Ready.Active;
		Ready.Chambered:
			TNT1 A 0 A_WeapSound("Halo/Weapons/SMG/Draw");
			WFG1 A 1 A_DoSelectAnim(-5);
		Ready.Active:
			WFG1 A 1 A_HaloWeaponReady(WRF_ALLOWRELOAD, true);
		loop;
			
		Ready.Dryfire:
			WFG1 A 12 A_WeapSound("Halo/Weapons/DryFire", CHANF_OVERLAP);
		goto Ready.Active;

		Select:
			TNT1 A 1 A_GunRaise();
		wait;

		Deselect:
			WFG1 A 1 A_GunLower();
		wait;
		
		Fire:
			TNT1 A 0 
			{				
				A_SetFrame(randompick(0,1));
				return A_GunCheckReload();
			}
			WFF1 "#" 1 Bright
			{
				A_FireSMG();
				A_RecoilOffset(frandom(-4,4),frandom(-4,4),2);
				A_SetRecoil(0.24, 0, 1);
				A_RQuakeEx(2,2,2,4,0,20,"",QF_RELATIVE);
				A_RollQuake(3,6,5, true);
			}
			WFF1 C 1
			{
				A_Light(0);
				A_MechanismSound("Halo/Weapons/SMG/Mech");
				A_RecoilOffset(0,0,2);
			}
			WFF1 D 1;
			TNT1 A 0 A_ReFire("Fire");
			WFF1 E 1;
			WFG1 A 1;
		goto Ready.Active;
		
		Reload:
			TNT1 A 0 A_ValidateReload("Ready.Dryfire");
			TNT1 A 0 A_ReloadSound();
			WFR1 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1;
			WFR2 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1;
			WFR3 ABCDEF 1;
			WFR3 G 1 
			{
				A_SetRecoil(0.24, 0.45, 1);
				A_ReloadClip();
			}
			WFR3 HIJKLMNOP 1;
			WFR3 Q 1 A_SetRecoil(0, 0.45, 2);
			WFR3 RSTUVWXYZ 1;
			WFR4 ABCDE 1; 
			TNT1 A 0 A_JumpIf(CountReloadAmmo(), "Reload.End");
		Reload.Empty:
			WFR4 FGHIJKLMNOPQRSTUVWXYZ 1;
		Reload.End:
			WFR5 ABCDEFGHIJ 1;
		goto Ready.Active;
		
		Spawn:
			MSNG A -1;
		stop;
	}
}
