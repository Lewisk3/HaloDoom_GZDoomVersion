
class Halo_ScatterShotBattery : Ammo 
{
	Default
	{
		Inventory.MaxAmount 100;
	}
}

class Halo_ScatterShot : HaloGun
{
	Default
	{
		Weapon.SlotNumber 5;
		Obituary "%o was disintegrated by %k's Scatter Shot.";
		Inventory.PickupMessage	"Picked up the Scatter Shot.";
		Tag "Scatter Shot";
		Weapon.BobSpeed 2.12;
		Weapon.BobRangeX 0.63;
		Weapon.AmmoType1 "Halo_ScatterShotBattery";
		Weapon.AmmoType2 "Halo_ScatterShotBattery";
		Weapon.AmmoGive 100;
		HaloGun.HasBattery true, 5;
		
		HaloGun.Availability "HL4";
		HaloGun.PowerTier P_STRONG;
				
		// Recoil
		RecoilWeapon.RecoilSpeed 20;
		HaloGun.Bloom 1.25;
		HaloGun.BloomSpeed 0.08;
		HaloGun.BaseRecoil 1;
		HaloGun.Inaccuracy 1;
		HaloGun.Crosshair "SSRet", 1.0;
		HaloGun.UIGraphic "MISSNG", 1.0;
		
		HaloGun.UISight "SCSGADS", 1.5, 1.0;
		HaloGun.SetupScope 2.0, 0.5;
		+HaloGun.SI_Fullscreen;
		+HaloGun.SI_Rotate;
		+HaloGun.SI_AlwaysHide;

		RecoilWeapon.YOffsetRange -10, 40;
	}
	
	int smokeTics;
	action void A_DoRecoilSmoke()
	{
		A_SetSFXPos(20,-8,2);
		for(int i = 0; i < floor(15 * halodoom_effectintensity); i++)
			A_SpawnSFX("MuzzleSmoke", 0,0);
		invoker.smokeTics = 0;
	}
	
	action void A_FireScatterShot()
	{
		A_Light(4);
		A_WeapSound("Halo/Weapons/ScatterShot/Fire", CHANF_OVERLAP, true);
		A_WeapSound("Halo/Weapons/ScatterShot/Fire/Bass", CHANF_OVERLAP, true);
		
		double lr = A_CheckInScope() ? 0 : 2;
		let beam = LaserBeam.Create(self, 7, lr, -2, type:"LSR_ScatterShot");
		let beamCore = LaserBeam.Create(self, 7, lr, -2, type:"LSR_ScatterShotCore");
		
		beam.setEnabled(true);
		beamCore.setEnabled(true);
					
		A_TakeAmmo(5);
		A_UpdateSpread();
	}

	States
	{
		
		Ready:
			TNT1 A 0 A_WeapSound("Halo/Weapons/ScatterShot/Draw");
			WOD1 HGFEDCBA 1 A_DoSelectAnim();
		Ready.Active:
			WOI1 A 1 
			{
				A_HaloWeaponReady(usescope:true);
				if(A_CheckInScope()) A_ResetSightGraphic();
			}
		loop;
		
		Ready.Dryfire:
			WOI1 A 4 A_WeapSound("Halo/Weapons/DryFire", CHANF_OVERLAP);
		goto Ready.Active;

		Select:
			TNT1 A 1 A_GunRaise();
		wait;

		Deselect:
			WOD1 ABCDEFGH 1;
			WOI1 H 1 A_GunLower();
		wait;
		
		Fire:
			TNT1 A 0 A_JumpIf(!CountLoadedAmmo(), "Ready.Dryfire");
			WOF1 A 1 Bright;
			WOF1 B 1 Bright
			{
				A_SetZoom(0.90, 2);
				if(A_CheckInScope()) 
					A_SetSightGraphic("BINRADSF");
				
				A_FireScatterShot();
			}
			WOF1 C 2 Bright;
			WOF1 D 1 Bright
			{
				A_RecoilOffset(random(-12,12),12,3);
				A_SetRecoil(4.20, 2.40, 2);
				A_RollQuake(4, 10, 2, true);
			}
			TNT1 A 0 
			{
				A_Light(0);
			//	A_RQuakeEx(3,3,3,10,0,20,"",QF_RELATIVE);
			}
			WOF1 EFG 1 A_SetZoom(1.0, 8);
			WOF1 GGGGGGGGGGGG 2 
			{
				if(invoker.smokeTics++ > 1) 
					A_DoRecoilSmoke();
			}
			WOF1 HIJKL 1;
			WOI1 A 4;
		goto Ready.Active;
		
		Spawn:
			MSNG A -1;
		stop;
	}
}
