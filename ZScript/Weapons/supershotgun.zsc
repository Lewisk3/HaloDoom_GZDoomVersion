// SNDBase: Halo/Weapons/SuperShotgun/Fire,Select,Reload
/*
	Double Barrel:
	Role: Heavy Close Quarters Combat
	Ammo:: 2 per Mag ; 28 total
	RPM: 
	Double: 30 RPM
	Single: 50 RPM
	Velocity: 1463 meters per second
	Range: 75 Meters
	Damage Output: 
	Buckshot: 25 per pellet (15 per shell)
*/
class Halo_DBLShotgun_Shells : Ammo 
{
	Default
	{
		Inventory.MaxAmount 2;
	}
}

class HaloDBLShotgun_Bullet : HaloBullet 
{
	Default
	{
		DamageType "SSG";
		HaloProjectile.SetRanges DBLSHOTGUN_RANGE1, DBLSHOTGUN_RANGE2;
		HaloProjectile.MinRangeDamage DBLSHOTGUN_MINDMG; 
		HaloProjectile.BaseDamage DBLSHOTGUN_DMG;
		HaloProjectile.Speed_MPS DBLSHOTGUN_BMPS;
	}
}

class Halo_DBLShotgun : HaloGun replaces SuperShotgun
{
	Default
	{
		Weapon.SlotNumber 2;
		Obituary "%o was took down by %k's Double Barreled Shotgun.";
		Inventory.PickupMessage	"DBL Shotgun Acquired.";
		Tag "DBLShotgun";
		Weapon.BobSpeed 2.12;
		Weapon.BobRangeX 0.63;
		// [Lewisk] had to switch ammotype's 1 and 2 because thats how my
		// reload function works.
		Weapon.AmmoType1 "Shell";
		Weapon.AmmoGive 4;
		Weapon.AmmoType2 "Halo_DBLShotgun_Shells";
				
		// Recoil
		HaloGun.Bloom 0.8;
		HaloGun.BloomSpeed 0.08;
		HaloGun.BaseRecoil DBLSHOTGUN_RECOIL;
		HaloGun.Inaccuracy DBLSHOTGUN_ACCMOD;
		HaloGun.Crosshair "DBLSRet1";
		HaloGun.UIGraphic "WI_DBL";
	}
	
	action void A_FireDouble()
	{
		A_Light(4);
		A_WeapSound("Halo/Weapons/SuperShotgun/Fire", 0, true);
		for(int i = 0; i < 30; i++)
			A_FireProjectile("HaloDBLShotgun_Bullet", A_RecoilSpread()+1, false, 8, 0, 0, A_RecoilSpread()-1.35);		
		A_TakeAmmo(2);
		A_UpdateSpread();
	}
	action void A_FireSingle()
	{
		A_Light(4);
		A_WeapSound("Halo/Weapons/SuperShotgun/Fire", 0, true);
		for(int i = 0; i < 15; i++)
			A_FireProjectile("HaloDBLShotgun_Bullet", A_RecoilSpread()+1, false, 8, 0, 0, A_RecoilSpread()-1.35);		
		A_TakeAmmo(1);
		A_UpdateSpread();
	}
	
	States
	{
		
		Ready:
			TNT1 A 0 A_WeapSound("Halo/Weapons/SuperShotgun/Select");
			DBSS ABCDEF 1 A_DoSelectAnim();
		Ready.Active:
			DBSI A 1 
			{
				A_RWeaponReady(WRF_ALLOWRELOAD);
			}
		loop;
		
		Ready.Dryfire.Recoil:
			DBSF SRQPON 1;
		Ready.Dryfire:
			DBSI A 4 A_WeapSound("Halo/Weapons/DryFire", CHANF_OVERLAP);
		goto Ready.Active;

		Select:
			TNT1 A 1 A_RRaise(12);
		wait;

		Deselect:
			DBSS FEDCBA 1;
			TNT1 A 0 A_RLower(12);
		wait;
		
		// DBL - 30RPM -
		// 30/60.  = 0.5
		// 35/0.5  = 70 frames
		// 26 frames for shot, leaves 44 for reload.
		Fire:
			TNT1 A 0 A_JumpIf(countinv(invoker.ammotype2)<2, "AltFire");
			TNT1 A 0 A_GunCheckReload();
			DBSF A 1 Bright
			{
				A_RecoilOffset(random(6,12),24,4);
				A_SetRecoil(7.69, 7.42, 1);
				A_SetZoom(0.86, 2);
				A_FireDouble();
				A_QuakeEx(4,4,4,4,0,20,"",QF_RELATIVE|QF_WAVE);
				
			}
			DBSF B 1 Bright;
			TNT1 A 0 A_Light(0);
			DBSF CD 2 
			{
				A_QuakeEx(2,2,4,6,0,20,"",QF_RELATIVE ,2.,3.,2.);
				A_SetZoom(0.974, 2);
				A_SetRecoil(0.60, 0.13, 4);
			}
			DBSF EFGH 1 A_RecoilOffset(0,10,5);
			DBSF IIIIIIIIIIJKL 1 A_RecoilOffset(0,0,8);
			DBSF M 1;
			TNT1 A 0 A_SetZoom(1.0, 2);
			TNT1 A 0 A_ValidateReload("Ready.Dryfire.Recoil");
		goto Reload;
		
		// SGL - 50RPM -
		// 50/60.  = ~0.83
		// 35/0.83 = ~42 frames
		AltFire:
			TNT1 A 0 A_GunCheckReload();
			TNT1 A 0 A_SetZoom(0.94, 3);
			DBSF A 2 Bright
			{
				A_RecoilOffset(random(2,7),12,4);
				A_Quake(2,6,0,20,"");
				A_SetRecoil(3.44, 1.45, 3);
				A_FireSingle();
			}
			DBSF N 1 Bright A_SetZoom(0.994, 2);
			DBSF O 1 A_Light(0);
			DBSF PPPPPPQ 1 A_RecoilOffset(0,0,10);
			TNT1 A 0 A_SetZoom(1.0, 2);
			TNT1 A 0 A_GunCheckReload();
			DBSF PON 1;
		goto Ready.Active;
		
		Reload:
			TNT1 A 0 A_ValidateReload("Ready.Dryfire");
			DBR1 A 1 A_StartSound("Halo/Weapons/SuperShotgun/Reload",CHAN_WEAPON,CHANF_OVERLAP);
			DBR1 B 1 A_SetRecoil(-2.0, 0, 3);
			DBR1 CDEFGHIJKLMNOPQRS 1;
			DBR1 T 1 A_SetRecoil(-1.0, 0, 4);
			DBR1 UVWXYZ 1;
			DBR2 A 1 A_ReloadClip();
			DBR2 BCDEFGHIJ 1 A_SetRecoil(0.25, 0, 4);
			DBR2 KLMNOPQ 1;
		goto Ready.Active;
		
		Spawn:
			HMAG A -1;
		stop;
		
		// Used for internal data reasons.
		SprCache:
			DBFA "#" 1;
			DBFB "#" 1;
		stop;
	}
}
