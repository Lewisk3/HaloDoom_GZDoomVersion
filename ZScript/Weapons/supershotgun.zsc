// SNDBase: Halo/Weapons/SuperShotgun/Fire,Select,Reload
/*
	Double Barrel:
	Role: Heavy Close Quarters Combat
	Ammo:: 2 per Mag ; 28 total
	RPM: 
	Double: 30 RPM
	Single: 50 RPM
	Velocity: 1463 meters per second
	Range: 75 Meters
	Damage Output: 
	Buckshot: 25 per pellet (15 per shell)
*/
class Halo_DBLShotgun_Shells : Ammo 
{
	Default
	{
		Inventory.MaxAmount 2;
	}
}

class HaloDBLShotgun_Bullet : HaloBullet 
{
	Default
	{
		DamageType "SSG";
		HaloProjectile.SetRanges DBLSHOTGUN_RANGE1, DBLSHOTGUN_RANGE2;
		HaloProjectile.MinRangeDamage DBLSHOTGUN_MINDMG; 
		HaloProjectile.BaseDamage DBLSHOTGUN_DMG;
		HaloProjectile.Speed_MPS DBLSHOTGUN_BMPS;
		HaloProjectile.HeadshotDMGFactor DBLSHOTGUN_HEDMOD;
	}
}

class Halo_DBLShotgun : HaloGun replaces SuperShotgun
{
	Default
	{
		Weapon.SlotNumber 2;
		Obituary "%o was took down by %k's Double Barreled Shotgun.";
		Inventory.PickupMessage	"DBL Shotgun Acquired.";
		Tag "Super Shotgun";
		Weapon.BobSpeed 2.12;
		Weapon.BobRangeX 0.63;
		Weapon.AmmoType1 "Shell";
		Weapon.AmmoGive 2;
		Weapon.AmmoType2 "Halo_DBLShotgun_Shells";
				
		// Recoil
		RecoilWeapon.RecoilSpeed 10;
		HaloGun.Bloom 1.25;
		HaloGun.BloomSpeed 0.08;
		HaloGun.BaseRecoil DBLSHOTGUN_RECOIL;
		HaloGun.Inaccuracy DBLSHOTGUN_ACCMOD;
		HaloGun.Crosshair "DBLSRet1";
		HaloGun.UIGraphic "WI_DBL";
		
		RecoilWeapon.YOffsetRange -10, 40;
	}
	
	action void A_FireDouble()
	{
		A_Light(4);
		A_WeapSound("Halo/Weapons/SuperShotgun/Fire", CHANF_OVERLAP, true);
		A_WeapSound("Halo/Weapons/SuperShotgun/Fire/Bass", CHANF_OVERLAP, true);
		for(int i = 0; i < 30; i++)
		{
			A_ShootProjectile("HaloDBLShotgun_Bullet", 8);
			if(!(i%2))
			{
				A_SetSFXPos(25,-8,-8);
				A_SpawnSFX("MuzzleSmoke", 0,0);
				A_SetSFXPos(25,-14,-8);
				A_SpawnSFX("MuzzleSmoke", 0,0);
			}
		}
		A_TakeAmmo(2);
		A_UpdateSpread();
	}
	
	action void A_FireSingle()
	{
		A_Light(4);
		A_WeapSound("Halo/Weapons/SuperShotgun/Fire/Single", 0, true);
		A_WeapSound("Halo/Weapons/SuperShotgun/Fire/Bass", CHANF_OVERLAP, true);
		for(int i = 0; i < 15; i++)
		{
			A_ShootProjectile("HaloDBLShotgun_Bullet", 8);		
			if(!(i%2))
			{
				A_SetSFXPos(25,-8,-8);
				A_SpawnSFX("MuzzleSmoke", 0,0);
				A_SetSFXPos(25,-14,-8);
				A_SpawnSFX("MuzzleSmoke", 0,0);
			}
		}
		A_TakeAmmo(1);
		A_UpdateSpread();
	}

	States
	{
		
		Ready:
			TNT1 A 0 A_WeapSound("Halo/Weapons/SuperShotgun/Select");
			DBSS ABCD 1 A_DoSelectAnim();
		Ready.Active:
			DBSI A 1 
			{
				A_HaloWeaponReady(WRF_ALLOWRELOAD);
			}
		loop;
		
		
		Ready.Dryfire:
			DBSI A 4 A_WeapSound("Halo/Weapons/DryFire", CHANF_OVERLAP);
		goto Ready.Active;

		Select:
			TNT1 A 1 A_GunRaise();
		wait;

		Deselect:
			DBSS DCB 1;
			DBSS A 1 A_GunLower();
		wait;
		
		// DBL - 30RPM -
		// 30/60.  = 0.5
		// 35/0.5  = 70 frames
		// 26 frames for shot, leaves 44 for reload.
		Fire:
			TNT1 A 0 A_GunCheckReload();
			TNT1 A 0 A_JumpIf(countinv(invoker.ammotype2)<2, "AltFire");
			DBSF A 1 Bright
			{
				A_RecoilOffset(random(6,12),24,4);
				A_SetRecoil(10.80, 7.50, 1);
				A_SetZoom(0.80, 2);
				A_FireDouble();
				A_RQuakeEx(6,6,6,8,0,20,"",QF_RELATIVE);
			}
			DBSF B 2 Bright;
			TNT1 A 0 A_Light(0);
			DBSF CD 1 
			{
				A_RQuakeEx(2,2,8,4,0,20,"", QF_RELATIVE|QF_WAVE);
				A_SetZoom(0.93, 2);
				A_SetRecoil(0.60, 0.13, 4);
			}
			DBSF EFGGG 1 A_RecoilOffset(0,10,5);
			DBSF GGGGGGGGGHIJKL 1 A_RecoilOffset(0,0,8);
			DBSF MNOP 1 A_SetZoom(1.0, 6);
			TNT1 A 0 A_ValidateReload("Ready.Dryfire");
		goto Reload;
		
		AltFire:
			TNT1 A 0 A_GunCheckReload();
			TNT1 A 0 A_SetZoom(0.92, 3);
			DBSF Q 2 Bright
			{
				A_RecoilOffset(random(2,7),12,4);
				A_RQuakeEx(2,6,2,4,0,20,"",QF_RELATIVE);
				A_SetRecoil(3.44, 1.45, 3);
				A_FireSingle();
			}
			DBSF R 1 Bright A_SetZoom(0.994, 2);
			DBSF S 1 A_Light(0);
			DBSF TUVWXXX 1 A_RecoilOffset(0,0,10);
			TNT1 A 0 A_SetZoom(1.0, 2);
			TNT1 A 0 A_GunCheckReload();
			DBSF XXX 1;
		goto Ready.Active;
		
		Reload:
			TNT1 A 0 A_ValidateReload("Ready.Dryfire");
			TNT1 A 0 A_StartSound("Halo/Weapons/SuperShotgun/Reload",CHAN_WEAPON,CHANF_OVERLAP);
			DBR1 AAAAABCDEFGHIJKLLLLMNOPQR 1;
			DBR1 S 1
			{	
				A_SetRecoil(-2.0, 0, 3);
				A_SetSFXPos(10,-8,-8);
				A_SpawnSFX("ShellCasing", -180,-60);
				A_SetSFXPos(10,-16,-8);
				A_SpawnSFX("ShellCasing", -180,-60);
			}
			DBR1 TUVWXYYYYYYYZ 1;
			DBR2 ABCDEFGHI 1;
			DBR2 J 1 A_SetRecoil(-1.0, 0, 4);
			DBR2 KLMMMMMNNNNNNO 1;
			DBR2 P 1 
			{
				A_SetRecoil(0.25, 0, 4);
				A_ReloadClip();
			}
			DBR2 QRSTUVWXYZ 1;
			DBR3 ABCDEFGHIJ 1;
		goto Ready.Active;
			
		Spawn:
			SSGF A -1;
		stop;
	}
}


// -- Single Fire Code -- 

// SGL - 50RPM -
// 50/60.  = ~0.83
// 35/0.83 = ~42 frames

/*
action void A_FireSingle()
{
	A_Light(4);
	A_WeapSound("Halo/Weapons/SuperShotgun/Fire/Single", 0, true);
	A_WeapSound("Halo/Weapons/SuperShotgun/Fire/Bass", CHANF_OVERLAP, true);
	for(int i = 0; i < 15; i++)
		A_ShootProjectile("HaloDBLShotgun_Bullet", 1, -1.35, 4.0, 8, spreadmod:0.35);		
	A_TakeAmmo(1);
	A_UpdateSpread();
}

// TNT1 A 0 A_JumpIf(countinv(invoker.ammotype2)<2, "AltFire");

AltFire:
	TNT1 A 0 A_GunCheckReload();
	TNT1 A 0 A_SetZoom(0.94, 3);
	DBSF A 2 Bright
	{
		A_RecoilOffset(random(2,7),12,4);
		A_RQuake(2,6,0,20,"");
		A_SetRecoil(3.44, 1.45, 3);
		A_FireSingle();
	}
	DBSF N 1 Bright A_SetZoom(0.994, 2);
	DBSF O 1 A_Light(0);
	DBSF PPPPPPQ 1 A_RecoilOffset(0,0,10);
	TNT1 A 0 A_SetZoom(1.0, 2);
	TNT1 A 0 A_GunCheckReload();
	DBSF PON 1;
goto Ready.Active;
*/
