class Halo_Bulldog_Shells : Ammo 
{
	Default 
	{
		Inventory.MaxAmount 12;
	}
}
class Halo_Bulldog_Reserves : Ammo
{
	mixin WorldAmmoBehavior;
	Default 
	{
		Radius 8;
		Height 6;

		Inventory.Amount 12;
		Inventory.MaxAmount 48;
		Inventory.Icon "HLAMC0";
		Inventory.PickupSound "Halo/Pickup/Ammo";
		Inventory.PickupMessage "Picked up 12 Shells for the Riot Shotgun";
		
		Ammo.BackpackMaxAmount 60;
	}
	
	States
	{
		Spawn:
			HLAM C -1 Bright;
		stop;
	}
}

class HaloBulldog_Bullet : HaloBullet
{
	Default
	{
		DamageType "Shotgun";
		HaloProjectile.SetRanges BULLDOG_RANGE1, BULLDOG_RANGE2;
		HaloProjectile.MinRangeDamage BULLDOG_MINDMG; 
		HaloProjectile.BaseDamage BULLDOG_DMG;
		HaloProjectile.Speed_MPS BULLDOG_BMPS;
		HaloProjectile.HeadshotDMGFactor BULLDOG_HEDMOD;
	}
	
	override void OnRicochet(Actor proj)
	{
		proj.A_StartSound("Ricochet/Shotgun", CHAN_AUTO, CHANF_OVERLAP);
	}
}

class Halo_Bulldog : HaloGun
{
	Default
	{	
		//$Category "HaloDoom/Weapons"
		Weapon.SlotNumber 3;
		Obituary "%o's riot was controlled by %k's Riot Shotgun.";
		Inventory.PickupMessage	"Picked up the CQS-48 Riot Shotgun.";
		Tag "Riot Shotgun";
		Weapon.BobSpeed 1.68;
		Weapon.BobRangeX 0.10;
		Weapon.AmmoType1 "Halo_Bulldog_Reserves";
		Weapon.AmmoGive 24;
		Weapon.AmmoType2 "Halo_Bulldog_Shells";
		HaloGun.Faction "Human";
		
		HaloGun.PowerTier P_STRONG;
				
		// Recoil
		HaloGun.Bloom 1.0;
		HaloGun.BloomSpeed 0.50;
		HaloGun.BaseRecoil BULLDOG_RECOIL;
		HaloGun.Inaccuracy BULLDOG_ACCMOD;
		HaloGun.Crosshair "BDRet", 0.8;
		HaloGun.UIGraphic "WI_BDOG", 0.65, 0.65;
		HaloGun.SetupUIAmmo "WI_AMM5", 16, 16, 0, 6;
		
		RecoilWeapon.YOffsetRange -10, 40;
	}
	
	override int GetPowerTier()
	{	
		if(HaloPlayer.IsGameType("SpartanOverkill")) return P_NORM | P_MID;
		return super.GetPowerTier();
	}
	
	override void MarkPrecacheSounds()
	{
		// Prevent stutters by precaching weapon sounds.
		MarkSound("Halo/Weapons/Bulldog/Fire");
		MarkSound("Halo/Weapons/Bulldog/Fire/Bass");
		MarkSound("Halo/Weapons/Bulldog/ReloadPump");
		MarkSound("Halo/Weapons/Bulldog/Reload");
		MarkSound("Halo/Weapons/Bulldog/Ready");
	}
	
	action void A_FireShotgun()
	{
		A_Light(2);
		A_WeapSound("Halo/Weapons/Bulldog/Fire", CHANF_OVERLAP);
		A_WeapSound("Halo/Weapons/Bulldog/Fire/Bass", CHANF_OVERLAP);
		A_SetSFXPos(25,-10,-10);
		for(int i = 0; i < 20; i++)
		{
			A_ShootProjectile("HaloBulldog_Bullet", 8);		
			if(!(i%2)) A_SpawnSFX("MuzzleSmoke", 0,0);
		}
		A_MuzzleSparks(15, 60, 8,8);
		A_TakeAmmo(1);
		A_UpdateSpread();
	}
	
	action void A_ReloadSound()
	{
		Sound reload_snd = "Halo/Weapons/Bulldog/Reload";
		if(!CountLoadedAmmo()) reload_snd = "Halo/Weapons/Bulldog/ReloadPump";
		A_StartSound(reload_snd, CHAN_RELOADING, CHANF_OVERLAP);
	}
	
	action state A_CheckRapidFire()
	{
		return A_JumpIf(A_ButtonStatus(BT_ATTACK, BTS_DOWN), "Fire");
	}
	
	States
	{
		Ready:
			TNT1 A 0 A_JumpIf(!A_DoFullSelectAnimation(), "Ready.Chambered");
			TNT1 A 4 A_WeapSound("Halo/Weapons/Bulldog/Ready");
			WAD1 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_DoSelectAnim(0, true);
			WAD2 ABCDEFGHIJKLMNOPQR 1 A_DoSelectAnim(0, true);
		goto Ready.Active;
		Ready.Chambered:
			TNT1 A 0 A_WeapSound("Halo/Weapons/Bulldog/Ready");
			WAS1 ABCDEFGHIJKLMNOPQRST 1 A_DoSelectAnim(-5);
		Ready.Active:
			WAI1 A 1 A_HaloWeaponReady(WRF_ALLOWRELOAD, true);
		loop;	
		
		Ready.Dryfire:
			WAI1 A 1;
		goto Ready.Active;

		Select:
			TNT1 A 1 A_GunRaise();
		wait;

		Deselect:
			WAS1 LKJHGFEDCB 1;
			WAS1 A 1 A_GunLower();
		wait;
		
		Fire:
			TNT1 A 0 A_GunCheckReload();
			TNT1 A 0 A_Jump(128, "Fire1", "Fire2", "Fire3", "Fire4");
		Fire1:
			WAF1 A 1 Bright
			{
				A_SetZoom(0.95, 2);
				A_SetRecoil(7.80, 0, 2);
				A_FireShotgun();
				A_RQuakeEx(3,1,0,3,0,20,"",QF_RELATIVE|QF_WAVE);
				A_RollQuake(2,6,1);
			}
			WAF1 B 1 Bright
			{
				A_SetRecoil(-2.05, 0, 2);
			}
			WAF1 C 1 A_SetZoom(1.0, 2);
			TNT1 A 0 A_Light(0);
			WAF1 D 1;
			WAF1 EFGHIJ 1;
			WAF1 K 1 
			{
				return A_CheckRapidFire();
			}
			WAF1 LMNO 1;
		goto Ready.Active;
		Fire2:
			WAF1 P 1 Bright
			{
				A_SetZoom(0.95, 2);
				A_SetRecoil(7.80, 0, 2);
				A_FireShotgun();
				A_RQuakeEx(3,1,0,3,0,20,"",QF_RELATIVE|QF_WAVE);
				A_RollQuake(2,6,1);
			}
			WAF1 Q 1 Bright
			{
				A_SetRecoil(-2.05, 0, 2);
			}
			WAF1 R 1 A_SetZoom(1.0, 2);
			TNT1 A 0 A_Light(0);
			WAF1 S 1;
			WAF1 TUVWXY 1;
			WAF1 Z 1 
			{
				return A_CheckRapidFire();
			}
			WAF2 ABCD 1;
		goto Ready.Active;
		Fire3:
			WAF2 E 1 Bright
			{
				A_SetZoom(0.95, 2);
				A_SetRecoil(7.80, 0, 2);
				A_FireShotgun();
				A_RQuakeEx(3,1,0,3,0,20,"",QF_RELATIVE|QF_WAVE);
				A_RollQuake(2,6,1);
			}
			WAF2 F 1 Bright
			{
				A_SetRecoil(-2.05, 0, 2);
			}
			WAF2 G 1 A_SetZoom(1.0, 2);
			TNT1 A 0 A_Light(0);
			WAF2 H 1;
			WAF2 IJKLMN 1;
			WAF2 O 1 
			{
				return A_CheckRapidFire();
			}
			WAF2 PRQS 1;
		goto Ready.Active;
		Fire4:
			WAF2 T 1 Bright
			{
				A_SetZoom(0.95, 2);
				A_SetRecoil(7.80, 0, 2);
				A_FireShotgun();
				A_RQuakeEx(3,1,0,3,0,20,"",QF_RELATIVE|QF_WAVE);
				A_RollQuake(2,6,1);
			}
			WAF2 U 1 Bright
			{
				A_SetRecoil(-2.05, 0, 2);
			}
			WAF2 V 1 A_SetZoom(1.0, 2);
			TNT1 A 0 A_Light(0);
			WAF2 W 1;
			WAF2 XYZ 1;
			WAF3 ABC 1;
			WAF3 D 1 
			{
				return A_CheckRapidFire();
			}
			WAF3 EFGH 1;
		goto Ready.Active;
		
		Reload:
			TNT1 A 0 A_ValidateReload("Ready.Dryfire");
			TNT1 A 0 A_ReloadSound();
			TNT1 A 0 A_JumpIf(!CountReloadAmmo(), "Reload.Empty");
			WAR1 ABCDEFGHI 1;
			WAR1 J 1 
			{
				A_SetRecoil(-1.0, 0, 2);
			}
			WAR1 KLMNOPQRSTUVWXYZ 1;
			WAR2 ABCDEFGH 1;
			WAR2 I 1 A_SetRecoil(1.0, 0, 2);
			TNT1 A 0 A_ReloadClip();
			WAR2 JKLMNOPQRSTUVWXYZ 1;
			WAR3 ABCDEFGHIJK 1;
			TNT1 A 0 A_GotoState("Ready.Active");

		Reload.Empty:
			WAR3 LMNOPQRSTUVWXYZ 1;
			WAR4 ABCDEFGH 1;
			WAR4 I 1 
			{
				A_SetRecoil(-2.0, 0, 2);
				A_SetSFXPos(10,-5,-20);
				A_SpawnSFX("Debris_BulldogMagazine", 0, 60);
			}
			WAR4 JKLMNOPQRSTUVWXYZ 1;
			WAR5 ABCDEFGHIJ 1;
			WAR5 K 1 A_SetRecoil(2.0, 0, 2);
			TNT1 A 0 A_ReloadClip();
			WAR5 LMNOPQRSTUVWXYZ 1;
			WAR6 ABC 1;
			WAR6 DEFGH 1;
			WAR6 I 1 A_SetRecoil(-0.5, 0, 2);
			WAR6 JKLMNO 1;
			WAR6 P 1 A_SetRecoil(-0.5, 0, 2);
			WAR6 QRSTUVWXYZ 1;
			WAR7 ABCDEFGHIJKLMN 1;
		goto Ready.Active;
		
		Spawn:
			WAG1 A -1;
		stop;
	}
}

