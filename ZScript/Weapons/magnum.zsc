// [Samu] Man! Setting a good resolution was a true hassle!
// 		  Made it a bit faster, and also, replaced the reloading sound for a faster version.
//		  Gun's centered properly, and now contains a reloading function!
class Halo_Magnum_Clip : Ammo 
{
	Default 
	{
		Inventory.MaxAmount 15;
	}
}

class HaloMagnum_Bullet : HaloBullet 
{
	Default
	{
		HaloProjectile.SetRanges MAGNUM_RANGE1, MAGNUM_RANGE2;
		HaloProjectile.MinRangeDamage MAGNUM_MINDMG; 
		HaloProjectile.BaseDamage MAGNUM_DMG;
		HaloProjectile.Speed_MPS MAGNUM_BMPS;
	}
}

class Halo_Magnum : HaloGun
{
	bool chambered;
	Default
	{
		Weapon.SlotNumber 2;
		Obituary "%o was took down by %k's Magnum.";
		Inventory.PickupMessage	"Magnum Md6 Acquired.";
		Tag "Magnum";
		Weapon.BobSpeed 1.86;
		Weapon.BobRangeX 0.30;
		// [Lewisk] had to switch ammotype's 1 and 2 because thats how my
		// reload function works.
		Weapon.AmmoType1 "Halo_Clip";
		Weapon.AmmoType2 "Halo_Magnum_Clip";
				
		// Recoil
		HaloGun.Bloom 0.8;
		HaloGun.BloomSpeed 0.15;
		HaloGun.BaseRecoil MAGNUM_RECOIL;
		HaloGun.Inaccuracy MAGNUM_ACCMOD;
		HaloGun.Crosshair "MagRet";
		HaloGun.UIGraphic "WI_MAGNM";
	}
	
	action void A_FireMagnum()
	{
		A_Light(2);
		A_WeapSound("Halo/Weapons/Mag_MD6/Fire", 0, true);
		A_WeapSound("Halo/Weapons/Mag_MD6/Fire/Bass", CHANF_OVERLAP, true);
		A_FireProjectile("HaloMagnum_Bullet", A_RecoilSpread()+1, false, 4, 0, 0, A_RecoilSpread()-1.35);		
		A_TakeAmmo();
		A_UpdateSpread();
	}
	action state A_CheckRapidFire()
	{
		return A_JumpIf(A_FirePressed(), "Fire");
	}
	
	States
	{
		
		Ready:
			TNT1 A 0 
 			{
				A_WeapSound("Halo/Weapons/Mag_MD6/Select");
				return A_JumpIf(invoker.chambered, "Ready.Chambered");
			}
			MASE DEFFFGHIJKLMNNNOPQRS 1 
			{
				A_DoSelectAnim(-5);
				invoker.chambered = true;
			}
		goto Ready.Active;
		Ready.Chambered:
			MASE ABC 1 A_DoSelectAnim(-5);
		Ready.Active:
			MAR1 A 1 A_RWeaponReady(WRF_ALLOWRELOAD);
		loop;
		
		Ready.Dryfire:
			MAR1 A 12 A_WeapSound("Halo/Weapons/DryFire", CHANF_OVERLAP);
		goto Ready.Active;

		Select:
			TNT1 A 0 A_RRaise(12);
		wait;

		Deselect:
			MASE CBA 1;
			TNT1 A 0 A_RLower(12);
		wait;
		
		
		//  - 210RPM -
		// 210/60 = 3.5
		// 35/3.5 = 10 frames.
		Fire:
			MAFI A 1
			{
				A_RecoilOffset(0,8,1);
				return A_GunCheckReload();
			}
			TNT1 A 0 
			{
				A_FireMagnum();
				A_SetRecoil(2.55, 0, 2);
				A_SetZoom(0.984,2);
				A_QuakeEx(0,2,2,2,0,20,"",QF_RELATIVE|QF_WAVE);
			}
			MAFI B 1 bright A_RecoilOffset(16,-20,4);
			MAFI C 1 
			{
				A_Light(0);
				A_SetZoom(1.0, 2);
				A_SetRecoil(-0.18, 0, 8);
			}
			TNT1 A 0 A_MechanismSound("Halo/Weapons/Mag_MD6/Mech");
			MAFI DDE 1 A_RecoilOffset(0,0,4);
			MAFI FGHI 1 A_CheckRapidFire();
		Hold:
			MAR1 A 1 A_CheckRapidFire();
			TNT1 A 0 A_ReFire("Hold");
		goto Ready.Active;
		
		// [Lewisk] A_ValidateReload and A_WeapSound are not in the same state because 
		// that'll change the return type of the annon function to a State.
		// This results in the reload sound not being seperated from the 
		// conditional check.
		Reload:
			TNT1 A 0 A_ValidateReload("Ready.Dryfire");
			TNT1 A 0 A_JumpIf(!CountLoadedAmmo(), "Reload.Empty");
			TNT1 A 0 A_WeapSound("Halo/Weapons/Mag_MD6/Reload", CHANF_OVERLAP);
			MAR1 ABCDEFG 1;
			MAR1 H 2; 
			MAR1 IJKLMNOP 1;
			MAR1 Q 1;
			MAR1 RSTUVWXYZ 1;
			MAR2 A 1 A_ReloadClip();
			MAR2 BCDEFG 1;
			MAR1 EDCBAA 1;
		goto Ready.Active;
		
		Reload.Empty:
			TNT1 A 0 A_WeapSound("Halo/Weapons/Mag_MD6/Reload/Empty", CHANF_OVERLAP);
			MAR3 ABCDE 1;
			MAR3 F 2;
			MAR3 GHIJLKMNO 1;
			MAR3 P 6;
			MAR3 QR 1;
			MAR3 S 3 A_ReloadClip();
			MAR3 TTUUVWXYZ 1;
			MAR4 ABCDE 1;
			MAR4 F 2;
			MAR4 GGHIJKLM 1;
		goto Ready.Active;
		
		Spawn:
			MGFL A -1;
		stop;
	}
}