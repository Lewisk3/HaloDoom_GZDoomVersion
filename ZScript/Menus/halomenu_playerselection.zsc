class HaloDoom_PlayerClassMenu : HaloMenuBase
{
	double fadein;
	uint selected_class;
	
	override void Init(Menu parent, ListMenuDescriptor desc)
	{
		Super.Init(parent, desc);
		
		mMouse = Mouse.Create("", 0,0,32,32);
		
		string btnON  = "Graphics/UI/Title/NONE.png";
		string btnOFF = "Graphics/UI/Title/NONE.png";
		string btnHover = "Graphics/UI/Title/btn_light.png";
		
		// Build class buttons
		vector2 btnpos = (520, 400);
		for(int i = 0; i < PlayerClasses.Size(); i++)
		{
			class<Actor> cls = PlayerClasses[i].Type;
			if(cls)
			{
				let defs = GetDefaultByType(cls);
				string clsname = PlayerPawn.GetPrintableDisplayName(cls);
				
				TextElement btntxt = newBtnText(clsname, "HaloFont");
				buttons.push(Button.Create('ClassBtn', btnOFF, btnON, btnHover, btnpos.x, btnpos.y, 0.60, 0.2, btntxt, 0xFF32006B));
				btnpos.y += 75;
			}
		}
		
		for(int i = 0; i < buttons.Size(); i++)
			buttons[i].ScaleCollider(0.9, 0.7);
		
		DontDim = true;
		mMouse.SetPos(buttons[0].btnrect.pos);
		btn_selected = 0;
		buttonAlpha = 0.7;
	}
	
	void DStr(String str, vector2 pos, uint flags = 0, Color col = Font.CR_WHITE, vector2 scale=(1.15,1.15), Font fnt = "HaloFont")
	{
		double len = (fnt.StringWidth(str) * scale.x);
		pos.x -= len;
		
		HLSBS.DrawString(fnt,str,pos,flags,col,1.0,scale);
	}
	
	override void Drawer()
	{
		super.Drawer();
		mMouse.Draw();
		
		DStr("Select Spartan", (0,100), HLSBS.SS_SCREEN_TOP_CENTER, Font.CR_BLACK, scale:(2.0,2.0), fnt:"BigFont");
				
		for(int i = 0; i < buttons.Size(); i++)
		{
			if(buttons[i].btntext)
			{
				if(buttons[i].pressed)
					buttons[i].btntext.font_color = Font.CR_BLUE;
				else if(buttons[i].hovered)
					buttons[i].btntext.font_color = Font.CR_WHITE;
				else
					buttons[i].btntext.font_color = Font.CR_GOLD;
			}
		}
		
		DrawSelectedPlayer();
		HLSBS.Dim(Color(255,0,0,0), 0.15);
	}
	
	void DrawSelectedPlayer()
	{	
		vector2 plrpos = (1200,500);
		Color bgcol = 0x266f03fc;
		uint index = -1;
		for(int i = 0; i < buttons.Size(); i++)
		{
			bool btnactive = (buttons[i].hovered || buttons[i].pressed);
			if(btnactive)			
			{
				index = i;
				break;
			}
		}
		
		// Backdrop
		HLSBS.DrawImage("B@CKDROP", plrpos, alpha:0.70, scale:(3.0,4.0), tint:bgcol);
		
		// Description
		vector2 desc_pos = (plrpos.x+190, plrpos.y-256);
		HLSBS.Fill(0xFF000000, desc_pos.x,desc_pos.y, 370,520);
		Font infoFont = "HaloFont";
		DStr("Spartan Info", (desc_pos.x+130,desc_pos.y), 0, Font.CR_BLUE, scale:(0.25,0.25), fnt:infoFont);
	
		if(index >= 0)
		{
			// Why does the syntax here need to be sooo specific?
			let plr = (class<HaloPlayer>) (PlayerClasses[index].Type);
			if(plr)
			{
				let plrdefs = GetDefaultByType(plr);
				State seestate = plrdefs.SeeState;
				if (seestate)
				{
					Vector2 Scale;
					TextureID sprite;
					bool flip;
					
					[sprite, flip, Scale] = seestate.GetSpriteTexture(0, 0, plrdefs.Scale);
				
					if (sprite.IsValid())
					{
						vector2 posoffs = (130,300);
						vector2 basescale = (6.0, 6.0);
						Scale.X *= basescale.X;
						Scale.Y *= basescale.Y;
						HLSBS.DrawTexture(sprite, plrpos+posoffs, scale:Scale);
					}
					
					// Write Description
					string desc = plrdefs.class_desc;
					HLSBS.DrawString(infoFont, desc, (desc_pos.x+20,desc_pos.y+80), 0, Font.CR_WHITE, scale:(0.125,0.125), linespacing:100);
				}
			}
		}
	}
	
	static void UpdatePlayerClass(int ind)
	{
		class<Actor> plrClass = PlayerClasses[ind].Type;
		if(plrClass)
		{
			let defs = GetDefaultByType(plrClass);
			string clsname = PlayerPawn.GetPrintableDisplayName(plrClass);
			
			let clsSetting = CVar.FindCVar("playerclass");
			if(clsSetting) clsSetting.SetString(clsname);
		}
	}
	
	override void Ticker()
	{
		for(int i = 0; i < buttons.Size(); i++)
		{
			buttons[i].Update(mMouse, btn_selected == -1);
				
			if(buttons[i].clicked)
			{
				MenuSound("UI/PressButton");
				buttons[i].clicked = false;
				selected_class = i;
				
				// Enter skill menu with selected player class.
				Menu.SetMenu("episodemenu", selected_class);
				break;
			}
		}
	}
}
