class HaloDoom_TitleMenu : HaloMenuBase
{
	double fadein;
	override void Init(Menu parent, ListMenuDescriptor desc)
	{
		Super.Init(parent, desc);
		
		MainBG = MenuTexture.Create("Graphics/UI/Title/TitleLogo.png",(0,-200),(0.5,0.5));
		mMouse = Mouse.Create("", 0,0,32,32);
		
		TextElement btntxt = newBtnText("CAMPAIGN");
		buttons.push(Button.Create("BTN_OFF" ,  "BTN_ON" , 960, 680, 0.8, 0.25, btntxt));
		
		btntxt = newBtnText("LOAD GAME");
		buttons.push(Button.Create("BTN_OFF" ,  "BTN_ON" , 960, 760, 0.8, 0.25, btntxt));
		
		btntxt = newBtnText("OPTIONS");
		buttons.push(Button.Create("BTN_OFF" ,  "BTN_ON" , 960, 840, 0.8, 0.25, btntxt));
		
		btntxt = newBtnText("QUIT");
		buttons.push(Button.Create("BTN_OFF" ,  "BTN_ON" , 960, 920, 0.8, 0.25, btntxt));
		
		for(int i = 0; i < buttons.Size(); i++)
			buttons[i].ScaleCollider(0.9, 0.7);
		
		S_ChangeMusic("TITLEMUS", force:true);
		DontDim = true;
		mMouse.SetPos(buttons[0].btnrect.pos);
		btn_selected = 0;
		fadein = 1.0;
	}
	
	void DStr(String str, vector2 pos, Color col = Font.CR_WHITE, vector2 scale=(1.15,1.15))
	{
		HLSBS.DrawString("BigFont",str,pos,0,col,1.0,scale);
	}
	
	override void Drawer()
	{
		super.Drawer();
		mMouse.Draw();
		
		vector2 ht_pos = (75,1000);
		for(int i = 0; i < buttons.Size(); i++)
		{
			if(buttons[i].btntext)
			{
				if(buttons[i].pressed)
					buttons[i].btntext.font_color = Font.CR_BLACK;
				else if(buttons[i].hovered)
					buttons[i].btntext.font_color = Font.CR_BLUE;
				else
					buttons[i].btntext.font_color = Font.CR_WHITE;
			}
		}
		
		// mMouse.DrawDebug();
		// buttons[0].DrawDebug();
		
		if(fadein > 0.15) fadein -= 0.02 * deltatime;
		HLSBS.Dim(Color(255,0,0,0), fadein);
	}
	
	override void Ticker()
	{
		if(btn_selected != -1) mMouse.left_pressed = true;
	
		for(int i = 0; i < buttons.Size(); i++)
		{
			buttons[i].Update(mMouse, btn_selected == -1);
				
			if(buttons[i].clicked)
			{
				MenuSound("UI/PressButton");
				buttons[i].clicked = false;
				
				Switch(i)
				{
					case 0:	 	// New Game
						Menu.SetMenu('PlayerclassMenu');
					break;
					case 1:		// Load Game
						Menu.SetMenu('LoadGameMenu');
					break;
					case 2:     // Options
						Menu.SetMenu('OptionsMenu');
					break;
					case 3:		// Exit
						Menu.SetMenu("QuitMenu");
					break;
					default:
					break;
				}
			}
		}
	}
}


class HaloDoom_IntroSeq : HaloMenuBase
{
	ANImageQueue intros;

	override void Init(Menu parent, ListMenuDescriptor desc)
	{
		Super.Init(parent, desc);
		
		intros = ANImageQueue.Create();
		intros.push("Intro_Disclaimer");
		intros.push("Intro_Xbox");
		intros.push("Intro_Bungie");
		intros.push("Intro_HaloDoom");
		
		DontDim = true;
		S_ChangeMusic("INTROMUS", force:true);
		
		btn_selected = 0;
	}
	
	override void Drawer()
	{
		intros.Process();
		
		if(intros.IsEmpty())
		{
			Close();
			SetMenu("Mainmenu");
			return;
		}
	}
	
	override bool MenuEvent(int mkey, bool fromcontroller)
	{
		switch (mkey)
		{
		case MKEY_Enter:
		case MKEY_Back:
			intros.Pop();
			return true;
		}
		return false;
	}
	
	override void Ticker()
	{
		
	}
}

// Animated intros
class Intro_Disclaimer : AnimatedImage
{
	double fade;
	uint fadedir;
	
	override void Setup()
	{
		super.Setup();
		fade = 0;
		fadedir = 1.0;
	}
	
	override void Animate(double dt)
	{	
		HLSBS.Dim(Color(255,0,0,0), 1.0);
		if(fadedir > 0)
		{
			fade += 0.02 * dt;
			if(fade >= 3.0) 
			{
				fadedir = -1;
				fade = 1.0;
			}
			HLSBS.DrawImage("Graphics/UI/Title/Splash1.jpg", center, alpha:fade);
		}
		else
		{
			fade -= 0.04 * dt;
			if(fade <= 0) active = false;
			HLSBS.DrawImage("Graphics/UI/Title/Splash1.jpg", center, alpha:fade);
			HLSBS.DrawImage("Graphics/UI/Title/Splash6.jpg", center, alpha:1.0-fade);
		}
	}
}
class Intro_Xbox : AnimatedImage
{
	double fade;
	double whitefade;
	
	override void Setup()
	{
		super.Setup();
		fade = 4.0;
		whitefade = 1.0;
	}
	
	override void Animate(double dt)
	{	
		HLSBS.Dim(Color(255,0,0,0), 1.0);
		
		whitefade -= 0.02 * dt;
		if(whitefade <= 0) fade -= 0.02 * dt;
		if(fade <= -0.5) active = false;
		HLSBS.DrawImage("Graphics/UI/Title/Splash2.jpg", center, alpha:fade);
		HLSBS.DrawImage("Graphics/UI/Title/Splash6.jpg", center, alpha:whitefade);
	}
}
class Intro_Bungie : AnimatedImage
{
	double fade;
	bool fadeout;
	
	override void Setup()
	{
		super.Setup();
		fade = 0;
	}
	
	override void Animate(double dt)
	{	
		HLSBS.Dim(Color(255,0,0,0), 1.0);
		
		if(!fadeout)
			fade += 0.02 * dt;
		else
			fade -= 0.02 * dt;
			
		if(fade >= 5.0) 
		{
			fadeout = true;
			fade = 1.0;
		}
		if(fade <= -0.5 && fadeout) active = false;
		
		HLSBS.DrawImage("Graphics/UI/Title/Splash3.jpg", center, alpha:fade);
		if(fade > 2.0) 
			HLSBS.DrawImage("Graphics/UI/Title/Splash4.jpg", center, alpha:fade-2.0);
		else if(fadeout)
			HLSBS.DrawImage("Graphics/UI/Title/Splash4.jpg", center, alpha:fade);
	}
}
class Intro_HaloDoom : AnimatedImage
{
	double fade;
	bool fadeout;
	

	override void Setup()
	{
		super.Setup();
		fade = 0;
	}
	
	override void Animate(double dt)
	{	
		HLSBS.Dim(Color(255,0,0,0), 1.0);
		
		if(!fadeout)
			fade += 0.02 * dt;
		else
		{
			fade -= 0.01 * dt;
		}
			
		if(fade >= 4.5) 
		{
			fadeout = true;
			fade = 1.0;
		}
		if(fade <= -0.35) active = false;
		
		HLSBS.DrawImage("Graphics/UI/Title/Splash5.jpg", center, alpha:fade);
	}
}

// TitleMap Objects
class Halo_Ring : Actor
{
	Default
	{
		+NOINTERACTION;
		+INTERPOLATEANGLES;
	}
	
	States
	{
		Spawn:
			RING A 1
			{
				pitch += 0.125;
			}
		loop;
	}
}

class Halo_RingPlanet : Actor
{
	Default
	{
		+NOINTERACTION;
		+WALLSPRITE;
		Scale 0.75;
	}
	
	States
	{
		Spawn:
			PLNT A -1;
		stop;
	}	
}

class Halo_Sky : Actor
{
	Default
	{
		+NOINTERACTION;
	}
	
	States
	{
		Spawn:
			RING A -1 Bright;
		stop;
	}
}